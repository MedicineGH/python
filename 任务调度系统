任务调度系统Mschedule


ansible

ansible是基于ssh实现的

ansible最重要的概念就是说，我如何把任务分发到不同的节点上去执行，这是它最重要完成的功能也是你最想要的东西。
所以它分两个角色，一个角色叫管理主机、一个角色叫托管节点，就说管理主机管理这些节点，这些节点叫托管节点。
 
 
Agent设计：
    Master按照用户要求将任务分发到指定的节点上，这些节点上需有一个Agent和Master通信，接收Master发布的任务，并执行这些任务。

　　设计agent的时候我们应该注意不要太过复杂，越复杂越跑步长久，越容易崩掉，所以我们写一个程序要想让它跑得好的，跑得稳定，就得把它设计的不要过于复杂，
    它上面集成功能越多谁知道上面那个环节出问题了，它就崩掉了，而agent我们运行的目的是7*24小时无间断运行，还不能挂。

　　但agent替你执行脚本的时候，跟主进程没关系，shell会启另一个进程执行。所以说越简单越好，越简单Bug越少越稳定。
 
 
用户用浏览器构建任务并提交任务，WebServer与MasterServer使用TCP连接，可以在WebServer上加个TCP主键，(比如说前面有个请求过来时，Web调TCP主键Client，
用Client去调用MasterServer。)Web天生支持http协议，要是换协议就换协议被找个TCP的来，其实本质上都是TCP协议只不过大家封装上层协议用起来比较简单，但是
Master上面已经使用的是TCP协议，要想使用http协议也行，使用http协议是Client到Web使用，我们不想在Master上加http协议了，所以要求Web上加TCP模块还是比较
合适的，如在Master上加http只为了跟Web通讯不太合适，所以在Web上TCP因为跟其它子系统通讯的话，其它子系统都支持TCP所以就这么用了。



与master之间通信模块实现：

Agent和Master之间是要通信的，底层都得通过Socket实现的，但Socket太底层了用起来特别不方便，得解决sand来来回回的、序列化的问题、ancode、decode一
些的问题。这里要解决网络通信问题，还有序列化问题。

有Agent与无Agent的区别：

有Agent，被控节点需要安装或运行特殊的软件，也就是说自己写个软件在那，你跟它通信把任务分给它由它来执行我们称为Agent(代理人)，和服务器端通信，服务
器端把脚本、命令传给Agent端，由Agent来控制执行。
无Agent，被控节点不需要安装或运行特殊的软件，列如通过ssh。这其实也是有Agent，不过Agent就是通过ssh，不是自己写的程序。
通用、简单、易实现。但管理不善，容易出安全问题。
并行效率不高，多节点的时候，尤其ssh都得Master自己挨个连，很累的
ssh执行要和Master之间通信的，这是它一个弱点，但是简单、方便、好执行。


Master和Agent之间采用RPC通信，使用zerorpc模块，它基于ZeroMQ和MessagePack之上，不但实现网络通信，还搞定了序列化反序列化：

zerorpc是一个轻量级，跨语言的RPC通信模块zerorpc，它基于ZeroMQ和MessagePack，它不但实现网络通信，还搞定了序列化反序列化的问题。

zerorpc模块说到底它是RPC通讯因为它对数据做了序列化反序列化，也就是说它实际上有通讯协议的，而且替我实现了两端接口定义，以及两端接口匹配的问题

Messagepack(是一个基于二进制高效的对象序列化类库，用于跨语言通讯)

ZeroMQ是一种基于消息队列的多线程网络库，提供跨越多种传输协议。

所以它叫zerorpc，rpc又叫远程过程调用，实际上是远程的过程中的哪些线程里面某一个类或者说方法或者说某个函数的调用。说到底都是这种调用，它们都是一致的，
总之通过网络，通过某种协议，大家交互然后我在远程节点上让它帮我去执行某些函数，所以这就是远程过程调用。


接口(API)
    接口就是提供的方法，能让对方访问，调用，操作的都可以称为接口。



 遇到的问题：

　　1.在写Message模块中测试时，Client连接不上Server，最终通过排查发现使用netifaces获取IP地址时出现异常返回的是IP对象，最终需要的str(ip)解决问题。

　　2.在使用zerorpc的clinet请求时,server端会出现以下异常

 　　zerorpc。通道多路复用器在recv上忽略错误

　　解决方法是：

　　检查代码逻辑并确认代码内的数据对象类型都没有问题。

　　pip uninstall msgpack-python

　　# 卸载messagepack在重装zerorpc

　　pip install zerorpc



WEB Server设计Restful API接口，使用json交互数据：

Restful它主要用于客户端和服务器交互，基于这个风格设计的软件可以更简洁。
